//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31968024
// Cuda compilation tools, release 12.0, V12.0.76
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_52
.address_size 64

	// .globl	_Z3sumPKdiPd
.extern .shared .align 16 .b8 shared_xs[];

.visible .entry _Z3sumPKdiPd(
	.param .u64 _Z3sumPKdiPd_param_0,
	.param .u32 _Z3sumPKdiPd_param_1,
	.param .u64 _Z3sumPKdiPd_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<11>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd2, [_Z3sumPKdiPd_param_0];
	ld.param.u32 	%r9, [_Z3sumPKdiPd_param_1];
	ld.param.u64 	%rd3, [_Z3sumPKdiPd_param_2];
	cvta.to.global.u64 	%rd1, %rd3;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	setp.ge.s32 	%p1, %r4, %r9;
	mov.f64 	%fd10, 0d0000000000000000;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r4, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd10, [%rd6];

$L__BB0_2:
	shl.b32 	%r10, %r3, 3;
	mov.u32 	%r11, shared_xs;
	add.s32 	%r5, %r11, %r10;
	st.shared.f64 	[%r5], %fd10;
	bar.sync 	0;
	shr.u32 	%r17, %r1, 1;
	setp.eq.s32 	%p2, %r17, 0;
	@%p2 bra 	$L__BB0_7;

$L__BB0_4:
	setp.le.u32 	%p3, %r17, %r3;
	@%p3 bra 	$L__BB0_6;

	shl.b32 	%r12, %r17, 3;
	add.s32 	%r13, %r5, %r12;
	ld.shared.f64 	%fd5, [%r13];
	cvt.rn.f32.f64 	%f1, %fd5;
	ld.shared.f64 	%fd6, [%r5];
	cvt.rn.f32.f64 	%f2, %fd6;
	max.f32 	%f3, %f1, %f2;
	cvt.f64.f32 	%fd7, %f3;
	st.shared.f64 	[%r5], %fd7;

$L__BB0_6:
	bar.sync 	0;
	shr.u32 	%r14, %r17, 31;
	add.s32 	%r15, %r17, %r14;
	shr.s32 	%r8, %r15, 1;
	setp.gt.s32 	%p4, %r17, 1;
	mov.u32 	%r17, %r8;
	@%p4 bra 	$L__BB0_4;

$L__BB0_7:
	setp.ne.s32 	%p5, %r3, 0;
	@%p5 bra 	$L__BB0_11;

	setp.eq.s32 	%p6, %r2, 0;
	ld.shared.f64 	%fd3, [shared_xs];
	@%p6 bra 	$L__BB0_10;

	cvt.rn.f32.f64 	%f4, %fd3;
	add.s32 	%r16, %r2, -1;
	mul.wide.u32 	%rd7, %r16, 8;
	add.s64 	%rd8, %rd1, %rd7;
	ld.global.f64 	%fd8, [%rd8];
	cvt.rn.f32.f64 	%f5, %fd8;
	max.f32 	%f6, %f4, %f5;
	cvt.f64.f32 	%fd9, %f6;
	mul.wide.u32 	%rd9, %r2, 8;
	add.s64 	%rd10, %rd1, %rd9;
	st.global.f64 	[%rd10], %fd9;
	bra.uni 	$L__BB0_11;

$L__BB0_10:
	st.global.f64 	[%rd1], %fd3;

$L__BB0_11:
	ret;

}

